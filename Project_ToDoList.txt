"Die Rekonfigurierung über den internal host wäre genau das, was ich gerne hätte. D.h. es sollte möglich sein, ein C/C++ Programm auf dem Hard Processor auszuführen, welches dann die PR übernimmt." Andreas Riefert
************************************************************************
Die Rekonfigurierung des FPGAs über einen internen Host. 
-> Ein C/C++ Programm auf dem Hard Processor System ausführen, welches die "partial reconfiguration" übernimmt.

Der FPGA läuft und zeigt beispielsweise den Ticker "run" und ein LED Blinkmuster an.
Das HPS greift auf ein im RAM Speicher hinterlegten C/C++ Programm zu, welches die Rekonfigurierung des FPGAs einleitet. Bei der Rekonfigurierung soll nur ein bestimmter Teil der LAB geändert werden während der Rest weiterläuft.

12.06.2015 Markus W.
************************************************************************

TO DO:
------------------------------------------------------------------------
- Design Partition erzeugen
- Floorplan erzeugen + LogicLock regions bestimmen und erzeugen (-> Demo)
- Erzeugung der ganzen Files  // Die Demo habe ich durchgemacht und da wurden auch die Files erzeugt. Aber nur zur Probe!

- Durchsehen aller Warnings, ob irgendwelche wichtigen Signale nicht verbunden sind
- C/C++ Programm auf HPS ausführen (Kommunikation zwischen FPGA und HP, Zugriff auf Speicher HPS-RAM)

*************************************************************************
DONE:
-------------------------------------------------------------------------
- Verbinden von IO signalen wie clkc reset und LEDs mit den dazugehörigen PINS

- Einen zweiten wrapper unter der freeezeregion zu erstellen + eine weitere LED_flash entity, die 3 LEDs in irgendeiner weise blinken lässt.

- LED Blinkmuster mit 4 LEDs erstellen (direkt unter dem toplevelmodul). Dieses beweist, das der Teil der nicht rekonfiguriert wird einfach weiter läuft // TICKER